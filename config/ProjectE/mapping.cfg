# Configuration file

enabledmappers {
    # Allows other Mods to add Recipes to the EMC Calculation. [default: true]
    B:APICustomConversionMapper=false

    # Allows other mods to set EMC values using the ProjectEAPI [default: true]
    B:APICustomEMCMapper=true

    # Add Conversions for Crafting Recipes gathered from net.minecraft.item.crafting.CraftingManager [default: true]
    B:CraftingMapper=true

    # Uses json files within config/ProjectE/customConversions/ to add values and conversions [default: true]
    B:CustomConversionMapper=false

    # Uses the `custom_emc.json` File to add EMC values. [default: true]
    B:CustomEMCMapper=true

    # Adds Conversions for fluid container items and fluids. [default: true]
    B:FluidMapper=false

    # Blacklist some OreDictionary names from getting an EMC value [default: true]
    B:OreDictionaryMapper=true

    # Add Conversions for `FurnaceRecipes` [default: true]
    B:SmeltingMapper=false
}


general {
    # Want to take a look at the internals of EMC Calculation? Enable this to write all the conversions and setValue-Commands to config/ProjectE/mappingdump.json [default: false]
    B:dumpEverythingToFile=false

    # Log known EMC Exploits. This can not and will not find all possible exploits. This will only find exploits that result in fixed/custom emc values that the algorithm did not overwrite. Exploits that derive from conversions that are unknown to ProjectE will not be found. [default: true]
    B:logEMCExploits=true

    # When the next EMC mapping occurs write the results to config/ProjectE/pregenerated_emc.json and only ever run the mapping again when that file does not exist, this setting is set to false, or an error occurred parsing that file. [default: false]
    B:pregenerate=false
}


mapperconfigurations {

    oredictionarymapper {
        # Set EMC=0 for everything that has an OD Name that starts with `ore`, `dust` or `crushed` besides `dustPlastic` [default: true]
        B:blacklistOresAndDusts=true
    }

    customconversionmapper {
        B:ODdefaults=false
        B:defaults=false
        B:metals=false
    }

    craftingmapper {

        irecipeimplementations {
            # Maps `IRecipe` CraftTweaker crafting recipes that extend `MCRecipeShaped` or `MCRecipeShapeless [default: true]
            B:enableCraftTweakerRecipeMapper=true

            # Maps custom IRecipe's from ProjectE [default: true]
            B:enablePECustomRecipeMapper=true

            # Maps `RecipeStage` implementation of `IRecipe` from Recipe Stages [default: true]
            B:enableRecipeStagesRecipeMapper=false

            # Maps `IRecipe` crafting recipes that extend `ShapedRecipes` or `ShapelessRecipes`, and their oredict equivalents [default: true]
            B:enableVanillaRecipeMapper=true
        }

    }

    smeltingmapper {
        B:doBackwardsMapping=false
    }

    apicustomemcmapper {

        customemcpriorities {
            # Priority for Mod with ModId = crafttweaker. Values: 74 [range: 0 ~ 512, default: 1]
            I:crafttweakerpriority=1
        }

        permissions {

            crafttweaker {
                S:akashictome=both
                S:appliedenergistics2=both
                S:artisanworktables=both
                S:betterquesting=both
                S:bibliocraft=both

                # Allow 'crafttweaker' to set and or remove values for 'biomesoplenty'. Options: [both, set, remove, none] [default: both]
                S:biomesoplenty=both
                S:buildinggadgets=both

                # Allow 'crafttweaker' to set and or remove values for 'chisel'. Options: [both, set, remove, none] [default: both]
                S:chisel=both

                # Allow 'crafttweaker' to set and or remove values for 'dcs_climate'. Options: [both, set, remove, none] [default: both]
                S:dcs_climate=both
                S:enderio=both
                S:extendedcrafting=both
                S:extrautils2=both
                S:ezstorage=both
                S:hap=both
                S:inspirations=both
                S:libvulpes=both
                S:mechanics=both
                S:mekanism=both
                S:mekanismgenerators=both
                S:mekanismtools=both

                # Allow 'crafttweaker' to set and or remove values for 'minecraft'. Options: [both, set, remove, none] [default: both]
                S:minecraft=both
                S:openblocks=both

                # Allow 'crafttweaker' to set and or remove values for 'pickletweaks'. Options: [both, set, remove, none] [default: both]
                S:pickletweaks=both

                # Allow 'crafttweaker' to set and or remove values for 'projecte'. Options: [both, set, remove, none] [default: both]
                S:projecte=both
                S:questbook=both

                # Allow 'crafttweaker' to set and or remove values for 'railcraft'. Options: [both, set, remove, none] [default: both]
                S:railcraft=both
                S:storagedrawers=both
                S:tcomplement=both
                S:tconevo=both

                # Allow 'crafttweaker' to set and or remove values for 'tconstruct'. Options: [both, set, remove, none] [default: both]
                S:tconstruct=both
                S:thermaldynamics=both
                S:thermalexpansion=both
                S:thermalfoundation=both
                S:thermalinnovation=both

                # Allow 'crafttweaker' to set and or remove values for 'twilightforest'. Options: [both, set, remove, none] [default: both]
                S:twilightforest=both
            }

        }

    }

}


